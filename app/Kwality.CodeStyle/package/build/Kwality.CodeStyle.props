<!-- ###################################################################################################################
     ## This file was generated by installing a NuGet package.
     ##
     ## NuGet Package:   Kwality.CodeStyle
     ##
     ## Changes to this file may cause incorrect behavior and will be lost when the file is generated again.
     ############################################################################################################### -->
<Project>
  <PropertyGroup>
    <EnforceCodeStyleInBuild>false</EnforceCodeStyleInBuild>
    <AnalysisLevel>latest-all</AnalysisLevel>
    <TreatWarningsAsErrors Condition="'$(CIBuild)' == 'true'">true</TreatWarningsAsErrors>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <!-- Specify the location of the `.editorconfig` and the `.globalconfig` files. -->
  <ItemGroup>
    <EditorConfigFile Include="$(MSBuildThisFileDirectory)..\content\config\.editorconfig" />
    <GlobalConfigFile Include="$(MSBuildThisFileDirectory)..\content\config\.globalconfig" />
  </ItemGroup>

  <!-- Specify the location of the `.gitignore` file. -->
  <ItemGroup>
    <GITConfigFile Include="$(MSBuildThisFileDirectory)..\content\GIT\.gitignore" />
  </ItemGroup>

  <!-- Specify the location of the `.PowerShell` file(s). -->
  <ItemGroup>
    <PSBuildFile Include="$(MSBuildThisFileDirectory)..\content\scritps\build.ps1" />
    <PSFormatFile Include="$(MSBuildThisFileDirectory)..\content\scritps\format.ps1" />
    <PSCoverFile Include="$(MSBuildThisFileDirectory)..\content\scritps\cover.ps1" />
    <PSMutateFile Include="$(MSBuildThisFileDirectory)..\content\scritps\mutate.ps1" />
  </ItemGroup>

  <!-- Copy the `.editorconfig` and the `.globalconfig` file (to the .NET Project) after a clean. -->
  <Target Name="CopyConfigFilesToProject" BeforeTargets="AfterClean">
    <Message Text="Copy IDE and Roslyn config files: `$(ProjectName)`." Importance="High" />
    <Copy SourceFiles="@(EditorConfigFile)" DestinationFolder="$(ProjectDir)" SkipUnchangedFiles="false" UseHardlinksIfPossible="false" />
    <Copy SourceFiles="@(GlobalConfigFile)" DestinationFolder="$(ProjectDir)" SkipUnchangedFiles="false" UseHardlinksIfPossible="false" />
  </Target>

  <!-- Copy the `.gitignore` file (to the .NET Project) after a clean. -->
  <Target Name="CopyGITFilesToProject" BeforeTargets="AfterClean">
    <Message Text="Copy GIT config files: `$(ProjectName)`." Importance="High" />
    <Copy SourceFiles="@(GITConfigFile)" DestinationFolder="$(ProjectDir)" SkipUnchangedFiles="true" UseHardlinksIfPossible="false" />
  </Target>

  <!--  Copy the (Core) PowerShell script(s) (to the .NET Project) after a clean. -->
  <Target Name="CopyCorePowerShellScriptsToProject" BeforeTargets="AfterClean">
    <Message Text="Copy PowerShell scripts (Core): `$(ProjectName)`." Importance="High" />
    <Copy SourceFiles="$(PSBuildFile)" DestinationFolder="$(ProjectDir)\.Kwality.CodeStyle\scripts" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$(PSFormatFile)" DestinationFolder="$(ProjectDir)\.Kwality.CodeStyle\scripts" SkipUnchangedFiles="true" />
  </Target>

  <!--  Copy the (Test) PowerShell script(s) (to the .NET Project) after a clean. -->
  <Target Name="CopyTestPowerShellScriptsToProject" BeforeTargets="AfterClean" Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
    <Message Text="Copy PowerShell scripts (Testing): `$(ProjectName)`." Importance="High" />
    <Copy SourceFiles="$(PSCoverFile)" DestinationFolder="$(ProjectDir)\.Kwality.CodeStyle\scripts" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$(PSMutateFile)" DestinationFolder="$(ProjectDir)\.Kwality.CodeStyle\scripts" SkipUnchangedFiles="true" />
  </Target>

  <!-- Exclude test projects from SonarQube. -->
  <PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
    <SonarQubeExclude>true</SonarQubeExclude>
  </PropertyGroup>

  <!-- Mark assemblies as NOT `CLSCompliant`. -->
  <ItemGroup>
    <AssemblyAttribute Include="System.CLSCompliant">
      <_Parameter1>false</_Parameter1>
      <_Parameter1_TypeName>System.Boolean</_Parameter1_TypeName>
    </AssemblyAttribute>
  </ItemGroup>

  <!-- Add the NuGet packages which are required. -->
  <ItemGroup>
    <PackageReference Include="SonarAnalyzer.CSharp" Version="*">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Expose `internal` members to the `Unit Test`, `Integration Test` projects & `Moq`.
  
       NOTE: This is only true when the name of the current project does NOT end with `Tests`. -->
  <ItemGroup Condition="!$(MSBuildProjectName.EndsWith('.Tests'))">
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <_Parameter1>$(ProjectName).Tests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <_Parameter1>$(ProjectName).Integration.Tests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
</Project>
